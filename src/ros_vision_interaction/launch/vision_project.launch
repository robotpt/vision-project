<launch>
    <arg name="is_launch_controllers" default="true"/>
    <arg name="aws_voice_name" default="Justin"/>
    <arg name="face_port" default="8081"/>
    <arg name="gui_port" default="8082"/>
    <arg name="is_launch_sound_listener" default="false"/>
    <arg name="is_record_audio" default="true"/>
    <arg name="device" default="hw:1,0"/>
    <arg name="format" default="wave"/>

    <!-- instance_id and params for data_capture multiple nodes-->
    <arg name="video_id" value="1"/>
    <arg name="upload_directory" value="/root/upload/"/>
    <param name="/data_capture/$(arg video_id)/video_capture/default_param/image_topic" value="camera/color/image_raw"/>
    <param name="/data_capture/$(arg video_id)/video_capture/default_param/is_record_topic" value="data_capture/is_record_interaction"/>
    <param name="/data_capture/$(arg video_id)/video_capture/default_param/output_directory" value="$(arg upload_directory)"/>

    <!-- instance_id and params for data_capture/audio_capture multiple nodes-->
    <arg name="audio_id_1" value="1"/>
    <param name="/data_capture/$(arg audio_id_1)/audio_capture/audio_topic" value="audio/audio"/>
    <param name="/data_capture/$(arg audio_id_1)/audio_capture/is_record_topic" value="data_capture/is_record_interaction"/>
    <param name="/data_capture/$(arg audio_id_1)/audio_capture/output_directory" value="$(arg upload_directory)"/>
    <param name="/data_capture/$(arg audio_id_1)/audio_capture/file_name_prefix" value="interaction"/>

    <arg name="audio_id_2" value="2"/>
    <param name="/data_capture/$(arg audio_id_2)/audio_capture/audio_topic" value="audio/audio"/>
    <param name="/data_capture/$(arg audio_id_2)/audio_capture/is_record_topic" value="data_capture/is_record_evaluation"/>
    <param name="/data_capture/$(arg audio_id_2)/audio_capture/output_directory" value="$(arg upload_directory)"/>
    <param name="/data_capture/$(arg audio_id_2)/audio_capture/file_name_prefix" value="evaluation"/>

    <arg name="audio_id_3" value="3"/>
    <param name="/data_capture/$(arg audio_id_3)/audio_capture/audio_topic" value="audio/audio"/>
    <param name="/data_capture/$(arg audio_id_3)/audio_capture/is_record_topic" value="data_capture/is_record_perseverance"/>
    <param name="/data_capture/$(arg audio_id_3)/audio_capture/output_directory" value="$(arg upload_directory)"/>
    <param name="/data_capture/$(arg audio_id_3)/audio_capture/file_name_prefix" value="perseverance"/>

    <arg name="mongodb_path" default="/root/mongodb_log" />
    <arg name="mongodb_port" default="62345" />

    <rosparam file="$(find ros_vision_interaction)/config/config.yaml" command="load"/>
    <rosparam file="$(find ros_vision_interaction)/topic_parameters.yaml" command="load"/>

    <!-- launch cordial -->
    <include file="$(find cordial_manager)/launch/manager.launch">
        <arg name="face_port" value="$(arg face_port)"/>
        <arg name="gui_port" value="$(arg gui_port)"/>
        <arg name="is_launch_sound_listener" default="$(arg is_launch_sound_listener)"/>
        <arg name="aws_voice_name" value="$(arg aws_voice_name)"/>
    </include>

    <!-- launch QT NUC -->
    <include file="$(find qt_robot_nuc)/launch/qt_robot_nuc.launch"/>

    <!-- relay gesture messages to QT robot -->
    <node pkg="topic_tools" type="relay" name="gesture_relay" args="/cordial/gesture/play /qt_robot/gesture/play" />

    <!-- launch data capture services -->
    <include file="$(find aws_uploader)/launch/aws_uploader.launch">
        <arg name="upload_directory_path" default="$(arg upload_directory)"/>
        <arg name="bucket_name" default="$(env AWS_BUCKET_NAME)"/>
    </include>
    <include file="$(find video_capture)/launch/capture.launch">
        <arg name="instance_id" value="$(arg video_id)"/>
    </include>
    <!-- multiple audio capture nodes -->
    <include file="$(find audio_capture2)/launch/capture.launch">
        <arg name="is_launch_audio_capture" value="true"/>
        <arg name="instance_id" value="$(arg audio_id_1)"/>
        <arg name="device" value="$(arg device)"/>
        <arg name="format" value="$(arg format)"/>
    </include>
    <include file="$(find audio_capture2)/launch/capture.launch">
        <arg name="is_launch_audio_capture" value="false"/>
        <arg name="instance_id" value="$(arg audio_id_2)"/>
        <arg name="device" value="$(arg device)"/>
        <arg name="format" value="$(arg format)"/>
    </include>
    <include file="$(find audio_capture2)/launch/capture.launch">
        <arg name="is_launch_audio_capture" value="false"/>
        <arg name="instance_id" value="$(arg audio_id_3)"/>
        <arg name="device" value="$(arg device)"/>
        <arg name="format" value="$(arg format)"/>
    </include>

    <!-- launch controllers -->
    <group if="$(arg is_launch_controllers)">
        <node pkg="ros_vision_interaction" type="ros_vision_project_delegator.py" name="vision_project_delegator" output="screen"/>
        <node pkg="ros_vision_interaction" type="ros_interaction_manager.py" name="interaction_manager" output="screen"/>
    </group>

    <!-- launch mongodb log -->
    <include file="$(find mongodb_store)/launch/mongodb_store.launch">
    	<arg name="db_path" value="$(arg mongodb_path)"/>
    	<arg name="port" value="$(arg mongodb_port)"/>
    </include>

    <node pkg="ros_vision_interaction" type="mongodb_record_topics.sh" name="mongodb_log" respawn="true" output="screen" />

</launch>
